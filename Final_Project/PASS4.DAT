    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-----------------------------------------------------------------------
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; FPGA Design Using VHDL
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Lab 7 - Picoblaze Assembly Code
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Author: Eric A. Beales
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Date:   12-Nov-2013
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-----------------------------------------------------------------------
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-in_port_address_addr
  OP1 VALUE-in_port_address_addr
   OPERAND2-40
  OP2 VALUE-40
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-current_position_addr
  OP1 VALUE-current_position_addr
   OPERAND2-40
  OP2 VALUE-40
    COMMENT-
    ADDRESS-000
      LABEL-start
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-000
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Set everything to 0x01 (or green unplayable)
    ADDRESS-000
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-001
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-002
      LABEL-clear_loop
INSTRUCTION-OUTPUT
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-(s0)
  OP2 VALUE-(s0)
    COMMENT-
    ADDRESS-003
      LABEL-
INSTRUCTION-ADD
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-004
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s2
  OP1 VALUE-s2
   OPERAND2-s0
  OP2 VALUE-s0
    COMMENT-
    ADDRESS-005
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s2
  OP1 VALUE-s2
   OPERAND2-40
  OP2 VALUE-40
    COMMENT-; Check if we reached the last space.
    ADDRESS-006
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-clear_loop
  OP2 VALUE-002
    COMMENT-
    ADDRESS-007
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Add the four blocks in the middle.
    ADDRESS-007
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-008
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-1B
  OP2 VALUE-1B
    COMMENT-
    ADDRESS-009
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-24
  OP2 VALUE-24
    COMMENT-
    ADDRESS-00A
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-03
  OP2 VALUE-03
    COMMENT-
    ADDRESS-00B
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-1C
  OP2 VALUE-1C
    COMMENT-
    ADDRESS-00C
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-23
  OP2 VALUE-23
    COMMENT-
    ADDRESS-00D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Add the white-playable blocks.
    ADDRESS-00D
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-41
  OP2 VALUE-41
    COMMENT-
    ADDRESS-00E
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-14
  OP2 VALUE-14
    COMMENT-
    ADDRESS-00F
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-1D
  OP2 VALUE-1D
    COMMENT-
    ADDRESS-010
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-22
  OP2 VALUE-22
    COMMENT-
    ADDRESS-011
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-2B
  OP2 VALUE-2B
    COMMENT-
    ADDRESS-012
      LABEL-
INSTRUCTION-ENABLE
   OPERAND1-INTERRUPT
  OP1 VALUE-INTERRUPT
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-013
      LABEL-do_nothing
INSTRUCTION-JUMP
   OPERAND1-do_nothing
  OP1 VALUE-013
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Wait here until interrupted.
    ADDRESS-014
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-----------------------------------------------------------------------
    ADDRESS-014
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Interrupt code
    ADDRESS-014
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-----------------------------------------------------------------------
    ADDRESS-014
      LABEL-int_routine
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Do nothing.
    ADDRESS-014
      LABEL-
INSTRUCTION-RETURNI
   OPERAND1-ENABLE
  OP1 VALUE-ENABLE
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-3FF
      LABEL-
INSTRUCTION-ADDRESS
   OPERAND1-3FF
  OP1 VALUE-3FF
   OPERAND2-
  OP2 VALUE-
    COMMENT-; Set interrupt vector
    ADDRESS-3FF
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-int_routine
  OP1 VALUE-014
   OPERAND2-
  OP2 VALUE-
    COMMENT-
